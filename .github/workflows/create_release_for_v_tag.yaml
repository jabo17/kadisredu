name: Build vendored asset and publish release

on:
  push:
    tags:
      - "v*"          # push a tag like v1.2.3

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Stage files (no VCS dirs)
        run: |
          rm -rf stage && mkdir stage
          rsync -a --delete --exclude='.git' --exclude='**/.git' --exclude='.github' ./ stage/
          echo "Submodule commit map:" > stage/SUBMODULES.txt
          git submodule status --recursive >> stage/SUBMODULES.txt
          [ -f .gitmodules ] && cat .gitmodules >> stage/SUBMODULES.txt

      - name: Create vendored tarball
        run: |
          RELEASE_NAME="${{ github.event.repository.name }}-${{ github.ref_name }}-with-submodules"
          tar --exclude-vcs --exclude='.git' --exclude="$GITHUB_ENV" --exclude "{RELEASE_NAME}.tar.gz" -czf "../${RELEASE_NAME}.tar.gz" .
          echo "ARCHIVE_NAME=../${RELEASE_NAME}.tar.gz" >> $GITHUB_ENV

      - name: Create draft release (so assets exist before publish)
        run: |
          TAG="${GITHUB_REF_NAME}"
          gh release create "$TAG" --draft --title "$TAG" --notes "Automated release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets to the draft
        run: |
          TAG="${GITHUB_REF_NAME}"
          gh release upload "$TAG" "${ARCHIVE_NAME}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish the release (triggers Zenodo with assets present)
        run: |
          TAG="${GITHUB_REF_NAME}"
          gh release edit "$TAG" --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
